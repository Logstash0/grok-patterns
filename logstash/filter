filter {
  if [type] == "syslog" {
    # auditd-USER_LOGIN
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => [
        "message", "type=USER_LOGIN msg=audit\(%{NUMBER:audit_epoch}:%{NUMBER:audit_counter}\): pid=%{NUMBER:audit_pid} uid=%{NUMBER:audit_uid} auid=%{NUMBER:audit_audid} ses=%{NUMBER:audit_session} subj=%{WORD:audit_se_user}:%{WORD:audit_se_role}:%{WORD:audit_se_type}:%{USERNAME:audit_se_mls}:%{TAG:audit_se_tags} msg='op=%{WORD:audit_sshd_op} acct=\"%{USERNAME:audit_sshd_user}\" exe=\"%{PATH:audit_sshd_path}\" hostname=%{NOTSPACE:audit_sshd_hostname} addr=%{IP:audit_sshd_ip} terminal=%{WORD:audit_sshd_terminal} res=%{WORD:audit_sshd_result}'"
      ]
      add_field => ["audit_type", "USER_LOGIN"]
    }

    # auditd-SYSCALL
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => [
        "message", "type=SYSCALL msg=audit\(%{NUMBER:audit_epoch}:%{NUMBER:audit_counter}\): arch=%{BASE16NUM:syscall_arch} syscall=%{INT:audit_syscall} success=%{WORD:audit_success} exit=%{INT:syscall_exitcode} a0=%{BASE16NUM:syscall_a0} a1=%{BASE16NUM:syscall_a1} a2=%{BASE16NUM:syscall_a2} a3=%{BASE16NUM:syscall_a3} items=%{INT:audit_items} ppid=%{INT:audit_ppid} pid=%{INT:audit_pid} auid=%{INT:audit_auid} uid=%{INT:audit_uid} gid=%{INT:audit_gid} euid=%{INT:audit_euid} suid=%{INT:audit_suid} fsuid=%{INT:audit_fsuid} egid=%{INT:audit_egid} sgid=%{INT:audit_sgid} fsgid=%{INT:audit_fsgid} tty=%{WORD:audit_tty} ses=%{INT:audit_ses} comm=\"%{WORD:audit_comm}\" exe=\"%{PATH:audit_exe}\" subj=%{WORD:audit_se_user}:%{WORD:audit_se_role}:%{WORD:audit_se_type}:%{USERNAME:audit_se_mls}:%{TAG:audit_se_tags} key=\"%{WORD:audit_key}\""
      ]
      add_field => ["audit_type", "SYSCALL"]
    }

    # auditd-EXECVE
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => [
        "message", "type=%{WORD:audit_type} msg=audit\(%{NUMBER:audit_epoch}:%{NUMBER:audit_counter}\): argc=%{INT:audit_argc} %{GREEDYDATA:audit_execve_rest}"
      ]
      add_field => ["audit_type", "EXECVE"]
    }
  }
}